@using IdentityClaimsPlay.Crm.Helpers
@inherits LayoutComponentBase
@inject IDbContextFactory<AppDbContext> ContextFactory
@inject NavigationManager NavManager
@inject UserHelper UserHelper

<TelerikRootComponent>
  <PageTitle>CRM</PageTitle>

  <div class="page">
    <div class="sidebar">
      <NavMenu />
    </div>

    <main>
      <div class="top-row px-4">
        <CascadingAuthenticationState>
          @if (UserHelper?.IsAuthed ?? false) {
            <div>@UserHelper.Email</div>
            <a href="@RouteHelper.Logout" class="w-auto"><span class="@IconsHelper.LogOut float-start me-2"></span> Log out</a>
          } else {
            <a href="@RouteHelper.Login" class="w-auto"><span class="@IconsHelper.LogIn float-start me-2"></span> Log in</a>
          }
        </CascadingAuthenticationState>
      </div>

      <article class="content px-4">
        <CascadingValue Value="@_companyInfo">
          @Body
        </CascadingValue>
      </article>
    </main>
  </div>
</TelerikRootComponent>

@code {
  private CompanyInfo _companyInfo = new("", "", "");

  protected override async Task OnInitializedAsync() {
    if (string.IsNullOrWhiteSpace(_companyInfo.Id)) {
      string domain = NavManager.BaseUri.Replace("https://", "").Replace("/", "");
      Company? company = await (await ContextFactory.CreateDbContextAsync()).Companies.SingleOrDefaultAsync(c => c.Domain == domain);
      if (company is not null) {
        _companyInfo = new(company.Id, company.Name, company.Domain);
      }
    }
  }

}